/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package clicktoscore;

import java.sql.Connection;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Shanil
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    DefaultTableModel tablebatsman=new DefaultTableModel();
    DefaultTableModel tablebowler=new  DefaultTableModel();
    InningsOver innend=new InningsOver();
    Match match1=new Match();
    Database db=new Database();
    myActionListener listener=new myActionListener();
    
    
    public static int runs;
    private static int[] batsman={0,0};
    private static int[] batsmanballs={0,0};
    int batnum;
    public static int balls;
    public static int extras;
    public static int overs;
    public static int totalovers;
    public static int wicket;
    public static int runsperover;
    public static int wickperover;
    int i;
    
    public Main() {
        initComponents();
        runs=0;
        balls=0;
        overs=-1;
        totalovers=0;
        wicket=0;
        i=0;
        batnum=0;
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblformat = new javax.swing.JLabel();
        lblteam2 = new javax.swing.JLabel();
        lblvenue = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblteam1 = new javax.swing.JLabel();
        lbldate = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lbltoss = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        lbltype = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblbatorbowl = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        jButton12 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "No", "Bastman Name", "Runs", "Balls"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        lblformat.setText("Format");

        lblteam2.setText("Team 2");

        lblvenue.setText("Venue");

        jLabel3.setText("VS");

        lblteam1.setText("Team1");

        lbldate.setText("Date");

        jLabel5.setText("Toss Won by");

        lbltoss.setText("Team Name");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Over No", "Total Runs"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(1).setResizable(false);
        }

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Wick No", "Runs"
            }
        ));
        jScrollPane3.setViewportView(jTable3);
        if (jTable3.getColumnModel().getColumnCount() > 0) {
            jTable3.getColumnModel().getColumn(0).setResizable(false);
            jTable3.getColumnModel().getColumn(1).setResizable(false);
        }

        jButton1.setText("WD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("NB");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("1");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("2");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("LB");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("4");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("3");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("6");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("WK");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("B");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "Overs", "Wickets", "Extras", "Economy"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable4);
        if (jTable4.getColumnModel().getColumnCount() > 0) {
            jTable4.getColumnModel().getColumn(0).setResizable(false);
            jTable4.getColumnModel().getColumn(1).setResizable(false);
            jTable4.getColumnModel().getColumn(2).setResizable(false);
            jTable4.getColumnModel().getColumn(3).setResizable(false);
            jTable4.getColumnModel().getColumn(4).setResizable(false);
        }

        lbltype.setText("Type");

        jLabel1.setText("At");

        jLabel2.setText("And Decided To");

        lblbatorbowl.setText("Batting");

        jButton12.setText("DOT");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbldate)
                    .addComponent(jLabel5))
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblteam1)
                    .addComponent(lbltoss))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel3)))
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblbatorbowl)
                    .addComponent(lblteam2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(54, 54, 54)
                .addComponent(lblvenue)
                .addGap(62, 62, 62)
                .addComponent(lblformat)
                .addGap(78, 78, 78)
                .addComponent(lbltype)
                .addGap(363, 363, 363))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8))
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbldate)
                            .addComponent(lblteam1)
                            .addComponent(jLabel3)
                            .addComponent(lblteam2)
                            .addComponent(jLabel1)
                            .addComponent(lblvenue)
                            .addComponent(lblformat)
                            .addComponent(lbltype))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(lbltoss)
                            .addComponent(jLabel2)
                            .addComponent(lblbatorbowl))
                        .addGap(47, 47, 47)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(46, 46, 46))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(143, 143, 143))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       
       
        if(batnum==0){
            batsman[batnum]++;
            batsmanballs[batnum]++;
        }
        else if(batnum==1){
            batsman[batnum]++;
            batsmanballs[batnum]++;
        }
        else{
            batnum=0;
           batsman[batnum]++;
           batsmanballs[batnum]++;
        }
        batnum++;
        runs++;
        balls++;
        runsperover++;
        
        DefaultTableModel tableovertotal=(DefaultTableModel)jTable2.getModel();
        DefaultTableModel tableover=(DefaultTableModel)jTable4.getModel();
        if(balls==6){
            batnum++;
            overs=overs+1;
            tableovertotal.setValueAt(runs,overs,1);
            tableover.setValueAt(runsperover,overs,1);
            jTable2.setModel(tableovertotal);  
            jTable4.setModel(tableover);  
            balls=0; 
            runsperover=0;
        }
        else if(overs==totalovers){
            if(match1.getFlag()){
            innend.end(runs);
            }
            else{
                JOptionPane.showMessageDialog(null,"Match Over","Information:",JOptionPane.INFORMATION_MESSAGE);
                match1.setTeam1score(toString().valueOf(runs));
                match1.setResult(match1.getTeam2name());
                db.insertmatch();
            }
          
        }
      
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        if(batnum==0){
            batsmanballs[batnum]++;
            batsman[batnum]=batsman[batnum]+6;
        }
        else if(batnum==1){
            batsmanballs[batnum]++;
           batsman[batnum]=batsman[batnum]+6;
        }
        else{
            batsmanballs[batnum]++;
            batnum=0;
           batsman[batnum]=batsman[batnum]+6;
        }
        runs=runs+6;
        balls=balls+1;
        runsperover=runsperover+6;
        DefaultTableModel tableovertotal=(DefaultTableModel)jTable2.getModel();
        DefaultTableModel tableover=(DefaultTableModel)jTable4.getModel();
        if(balls==6){
            batnum++;
            overs=overs+1;
            tableovertotal.setValueAt(runs,overs,1);
            tableover.setValueAt(runsperover,overs,1);
            jTable2.setModel(tableovertotal);  
            jTable4.setModel(tableover);  
            balls=0; 
            runsperover=0;
        }
        else if(overs==totalovers){
             if(match1.getFlag()){
            innend.end(runs);
            }
            else{
                JOptionPane.showMessageDialog(null,"Match Over","Information:",JOptionPane.INFORMATION_MESSAGE);
                match1.setTeam1score(toString().valueOf(runs));
                match1.setResult(match1.getTeam2name());
                db.insertmatch();
            }
        }
       
        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        balls=balls+1;
        Extras ex=new Extras();
        ex.setVisible(true);
        JOptionPane.showMessageDialog(null,"Please Select The Number of Extras","Information:",JOptionPane.INFORMATION_MESSAGE);
        DefaultTableModel tableovertotal=(DefaultTableModel)jTable2.getModel();
        runsperover=runsperover+3;
        
        DefaultTableModel tableover=(DefaultTableModel)jTable4.getModel();
        if(balls==6){
            batnum++;
            overs=overs+1;
            tableovertotal.setValueAt(runs,overs,1);
            tableover.setValueAt(runsperover,overs,1);
            jTable2.setModel(tableovertotal);  
            jTable4.setModel(tableover);  
            balls=0; 
            runsperover=0;
        }
        else if(overs==totalovers){
             if(match1.getFlag()){
            innend.end(runs);
            }
            else{
                JOptionPane.showMessageDialog(null,"Match Over","Information:",JOptionPane.INFORMATION_MESSAGE);
                match1.setResult(match1.getTeam2name());
                db.insertmatch();
            }
        }
        if(match1.getFlag().equals(false)){
        if(Main.runs>match1.getTeam2score()){
             JOptionPane.showMessageDialog(null,"Match Over","Information:",JOptionPane.INFORMATION_MESSAGE);
             System.out.println(Main.runs);
             System.out.println(match1.getTeam2score());
             match1.setTeam1score(toString().valueOf(runs));
             db.insertmatch();
         }
        }
       
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
       if(batnum==0){
            batsman[batnum]=batsman[batnum]+4;
            batsmanballs[batnum]++;
        }
        else if(batnum==1){
           batsman[batnum]=batsman[batnum]+4;
           batsmanballs[batnum]++;
        }
        else{
            batnum=0;
           batsman[batnum]=batsman[batnum]+4;
           batsmanballs[batnum]++;
        }
        runs=runs+4;
        balls=balls+1;
        runsperover=runsperover+4;
        DefaultTableModel tableovertotal=(DefaultTableModel)jTable2.getModel();
        DefaultTableModel tableover=(DefaultTableModel)jTable4.getModel();
        if(balls==6){
            batnum++;
            overs=overs+1;
            tableovertotal.setValueAt(runs,overs,1);
            tableover.setValueAt(runsperover,overs,1);
            jTable2.setModel(tableovertotal);  
            jTable4.setModel(tableover);  
            balls=0; 
            runsperover=0;
        }
       else if(overs==totalovers){
            if(match1.getFlag()){
            innend.end(runs);
            }
            else{
                JOptionPane.showMessageDialog(null,"Match Over","Information:",JOptionPane.INFORMATION_MESSAGE);
                match1.setTeam1score(toString().valueOf(runs));
                match1.setResult(match1.getTeam2name());
                db.insertmatch();
            }
        }
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        
        Batsman bat=new Batsman();
        if(batnum==0){
            batsmanballs[batnum]++;
            bat.setTotalruns(bat.getTotalruns()+batsman[batnum]);
            tablebatsman=(DefaultTableModel)jTable1.getModel();
            tablebatsman.setValueAt(batsman[batnum],wicket,2);
            tablebatsman.setValueAt(batsmanballs[batnum],wicket,3);
            jTable1.setModel(tablebatsman); 
            
            batsman[batnum]=0;
            batsmanballs[batnum]=0;
        }
        else if(batnum==1){
            batsmanballs[batnum]++;
            bat.setTotalruns(bat.getTotalruns()+batsman[batnum]);
            tablebatsman=(DefaultTableModel)jTable1.getModel();
            tablebatsman.setValueAt(batsman[batnum],wicket,2);
            tablebatsman.setValueAt(batsmanballs[batnum],wicket,3);
            jTable1.setModel(tablebatsman); 
             batsman[batnum]=0;
             batsmanballs[batnum]=0;
        }
        else{
            batnum=0;
            batsmanballs[batnum]++;
            bat.setTotalruns(bat.getTotalruns()+batsman[batnum]);
            tablebatsman=(DefaultTableModel)jTable1.getModel();
            tablebatsman.setValueAt(batsman[batnum],wicket,2);
            tablebatsman.setValueAt(batsmanballs[batnum],wicket,3);
            jTable1.setModel(tablebatsman); 
            batsman[batnum]=0;
            batsmanballs[batnum]=0;
        }
        wicket=wicket+1;
        balls=balls+1;
        wickperover++;
        DefaultTableModel tableovertotal=(DefaultTableModel)jTable2.getModel();
        DefaultTableModel tableover=(DefaultTableModel)jTable2.getModel();
         if(balls==6){
            batnum++;
            overs=overs+1;
            tableovertotal.setValueAt(runs,overs,1);
            //tableover.setValueAt(wickperover,);
            jTable2.setModel(tableovertotal);  
            balls=0;
        }
        
        DefaultTableModel tablewicket=(DefaultTableModel)jTable3.getModel();
        DefaultTableModel tablebatruns=(DefaultTableModel)jTable1.getModel();
        tablewicket.setValueAt(wicket,i,0);
        tablewicket.setValueAt(runs,i,1);
       
        jTable3.setModel(tablewicket);
        i++;
        if(wicket==10){
            if(match1.getFlag()){
            innend.end(runs);
            }
            else{
                JOptionPane.showMessageDialog(null,"Match Over","Information:",JOptionPane.INFORMATION_MESSAGE);
                match1.setTeam1score(toString().valueOf(runs));
                match1.setResult(match1.getTeam2name());
                db.insertmatch();
            }
        }
        else if(overs==totalovers){
            if(match1.getFlag()){
            innend.end(runs);
            }
            else{
                JOptionPane.showMessageDialog(null,"Match Over","Information:",JOptionPane.INFORMATION_MESSAGE);
                match1.setTeam1score(toString().valueOf(runs));
                match1.setResult(match1.getTeam2name());
                db.insertmatch();
            }
        }
       
       
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        balls=balls+1;
        Extras ex=new Extras();
        ex.setVisible(true);
        JOptionPane.showMessageDialog(null,"Please Select The Number of Extras","Information:",JOptionPane.INFORMATION_MESSAGE);
        match1.setResult(match1.getTeam2name());
       runsperover=runsperover+3;
        DefaultTableModel tableovertotal=(DefaultTableModel)jTable2.getModel();
        DefaultTableModel tableover=(DefaultTableModel)jTable4.getModel();
        if(balls==6){
            batnum++;
            overs=overs+1;
            tableovertotal.setValueAt(runs,overs,1);
            tableover.setValueAt(runsperover,overs,1);
            jTable2.setModel(tableovertotal);  
            jTable4.setModel(tableover);  
            balls=0; 
            runsperover=0;
        }
        else if(overs==totalovers){
             if(match1.getFlag()){
            innend.end(runs);
            }
            else{
                JOptionPane.showMessageDialog(null,"Match Over","Information:",JOptionPane.INFORMATION_MESSAGE);
                match1.setTeam1score(toString().valueOf(runs));
                db.insertmatch();
            }
        }
        if(match1.getFlag().equals(false)){
        if(Main.runs>match1.getTeam2score()){
             JOptionPane.showMessageDialog(null,"Match Over","Information:",JOptionPane.INFORMATION_MESSAGE);
             System.out.println(Main.runs);
             System.out.println(match1.getTeam2score());
             match1.setTeam1score(toString().valueOf(runs));
             db.insertmatch();
         }
        }
        
    }//GEN-LAST:event_jButton10ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
       
    }//GEN-LAST:event_formWindowActivated

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        jButton1.addActionListener(listener);
        jButton2.addActionListener(listener);
        jButton3.addActionListener(listener);
        jButton4.addActionListener(listener);
        jButton5.addActionListener(listener);
        jButton6.addActionListener(listener);
        jButton7.addActionListener(listener);
        jButton8.addActionListener(listener);
        jButton9.addActionListener(listener);
        jButton10.addActionListener(listener);
        Match match1=new Match();
        lblteam1.setText(match1.getTeam1name());
        lblteam2.setText(match1.getTeam2name());
        lblvenue.setText(match1.getVenue());
        lbltype.setText(match1.getMatchtype());
        lblformat.setText(match1.getFormat());
        lbldate.setText(match1.getMatchdate());
        lbltoss.setText(match1.getToss());
        
        if(match1.getToss()==match1.getTeam1name()){
            lblbatorbowl.setText("Bat");
        }
        else{
            lblbatorbowl.setText("Bowl");
        }
       
        int k=1;
        tablebatsman=(DefaultTableModel)jTable1.getModel();
        
        for(int i=0;i<Team1MemberList.team1players.size();i++){
        tablebatsman.setValueAt(k,i,0);
        tablebatsman.setValueAt(Team1MemberList.team1players.get(i),i,1);
        jTable1.setModel(tablebatsman);
        k++;
        }
         
        tablebowler=(DefaultTableModel)jTable4.getModel();
        for(int i=0;i<Team2MemberList.team2players.size();i++){
        tablebowler.setValueAt(Team2MemberList.team2players.get(i),i,0);
        jTable4.setModel(tablebowler);
        }
        
        DefaultTableModel tableovers=(DefaultTableModel)jTable2.getModel();
       
       
      if(match1.getFormat()=="50 Overs"){
            totalovers=50;
        }
        else{
            totalovers=20;
        }
        int j=1;
        for(int i=0;i<totalovers;i++){
            tableovers.setValueAt(j,i,0);
            j++;
        }
    }//GEN-LAST:event_formWindowOpened

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        if(batnum==0){
            batsman[batnum]=batsman[batnum]+2;
            batsmanballs[batnum]++;
        }
        else if(batnum==1){
           batsman[batnum]=batsman[batnum]+2;
           batsmanballs[batnum]++;
        }
        else{
            batnum=0;
           batsman[batnum]=batsman[batnum]+2;
           batsmanballs[batnum]++;
        }
        runs=runs+2;
        balls=balls+1;
        runsperover=runsperover+2;
        DefaultTableModel tableovertotal=(DefaultTableModel)jTable2.getModel();
        DefaultTableModel tableover=(DefaultTableModel)jTable4.getModel();
        if(balls==6){
            batnum++;
            overs=overs+1;
            tableovertotal.setValueAt(runs,overs,1);
            tableover.setValueAt(runsperover,overs,1);
            jTable2.setModel(tableovertotal);  
            jTable4.setModel(tableover);  
            balls=0; 
            runsperover=0;
        }
        else if(overs==totalovers){
            if(match1.getFlag()){
            innend.end(runs);
            }
            else{
                JOptionPane.showMessageDialog(null,"Match Over","Information:",JOptionPane.INFORMATION_MESSAGE);
                match1.setTeam1score(toString().valueOf(runs));
                match1.setResult(match1.getTeam2name());
                db.insertmatch();
            }
        }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
       if(batnum==0){
            batsman[batnum]=batsman[batnum]+3;
            batsmanballs[batnum]++;
        }
        else if(batnum==1){
           batsman[batnum]=batsman[batnum]+3;
           batsmanballs[batnum]++;
        }
        else{
            batnum=0;
           batsman[batnum]=batsman[batnum]+3;
           batsmanballs[batnum]++;
        }
        batnum++;
        runs=runs+3;
        balls=balls+1;
        runsperover=runsperover+3;
        DefaultTableModel tableovertotal=(DefaultTableModel)jTable2.getModel();
        DefaultTableModel tableover=(DefaultTableModel)jTable4.getModel();
        if(balls==6){
            batnum++;
            overs=overs+1;
            tableovertotal.setValueAt(runs,overs,1);
            tableover.setValueAt(runsperover,overs,1);
            jTable2.setModel(tableovertotal);  
            jTable4.setModel(tableover);  
            balls=0; 
            runsperover=0;
        }
        else if(overs==totalovers){
            if(match1.getFlag()){
            innend.end(runs);
            }
            else{
                JOptionPane.showMessageDialog(null,"Match Over","Information:",JOptionPane.INFORMATION_MESSAGE);
                match1.setTeam1score(toString().valueOf(runs));
                match1.setResult(match1.getTeam2name());
                db.insertmatch();
            }
        }
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       Extras ex=new Extras();
       ex.setVisible(true);
        JOptionPane.showMessageDialog(null,"Please Select The Number of Extras","Information:",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         Extras ex=new Extras();
       ex.setVisible(true);
        JOptionPane.showMessageDialog(null,"Please Select The Number of Extras","Information:",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
         
    }//GEN-LAST:event_formWindowClosed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        
    }//GEN-LAST:event_formMouseClicked

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
       
    }//GEN-LAST:event_jPanel1MouseClicked

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        balls++;
        batsmanballs[batnum]++;
        if(balls==6){
            batnum++;
            overs=overs+1;
            DefaultTableModel tableovertotal=(DefaultTableModel)jTable2.getModel();
            tableovertotal.setValueAt(runs,overs,1);
            //tableover.setValueAt(runsperover,overs,1);
            jTable2.setModel(tableovertotal);  
            //jTable4.setModel(tableover);  
            balls=0; 
            runsperover=0;
        }
        else if(overs==totalovers){
             if(match1.getFlag()){
            innend.end(runs);
            }
            else{
                JOptionPane.showMessageDialog(null,"Match Over","Information:",JOptionPane.INFORMATION_MESSAGE);
                match1.setTeam1score(toString().valueOf(runs));
                db.insertmatch();
            }
        }
        if(match1.getFlag().equals(false)){
        if(Main.runs>match1.getTeam2score()){
             JOptionPane.showMessageDialog(null,"Match Over","Information:",JOptionPane.INFORMATION_MESSAGE);
             System.out.println(Main.runs);
             System.out.println(match1.getTeam2score());
             match1.setTeam1score(toString().valueOf(runs));
             db.insertmatch();
         }
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JLabel lblbatorbowl;
    private javax.swing.JLabel lbldate;
    private javax.swing.JLabel lblformat;
    private javax.swing.JLabel lblteam1;
    private javax.swing.JLabel lblteam2;
    private javax.swing.JLabel lbltoss;
    private javax.swing.JLabel lbltype;
    private javax.swing.JLabel lblvenue;
    // End of variables declaration//GEN-END:variables
}
